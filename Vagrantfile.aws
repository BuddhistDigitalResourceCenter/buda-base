# -*- mode: ruby -*-
# vi: set ft=ruby :

# this Vagrantfile can be used to provision an AWS ubuntu/trusty instance which can then
# be used to create an instance for further dev use

# on first use install the aws provider plugin for vagrant:
# vagrant plugin install vagrant-aws
# then add the "dummy" box which is reference below:
# vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box

# in ~/.profile or equiv add so credentials are available below. This assumes awscli setup.
# export AWS_ACCESS_KEY_ID=`grep "aws_access_key_id" ~/.aws/credentials | awk -F " = " '{print $2}'`
# export AWS_SECRET_ACCESS_KEY=`grep "aws_secret_access_key" ~/.aws/credentials | awk -F " = " '{print $2}'`

# now use
# vagrant up --provider=aws

Vagrant.configure(2) do |config|
  
  config.vm.hostname = "buda1"

  config.vm.box = "dummy"
  
  config.vm.provider :aws do |aws, override|
    # credentials for accessing AWS to perform a launch
    aws.access_key_id = ENV[ 'AWS_ACCESS_KEY_ID' ]
    aws.secret_access_key = ENV[ 'AWS_SECRET_ACCESS_KEY' ]
    
    aws.keypair_name = "BDRC_Dev_001"
    aws.security_groups = [ 'BDRC_Dev_SG_001' ]
    # ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160114.5 - ami-fce3c696
    aws.ami = "ami-fce3c696"
    aws.instance_type = "m4.large"
    aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 
                                  'Ebs.VolumeSize' => 32, 
                                  'Ebs.VolumeType' => 'gp2' }]

    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = "/usr/local/BUDA_TECH/BDRC_Dev_001.pem"
  end
  
  config.vm.provision :shell, path: "scripts/ruby.sh"
  config.vm.provision :shell, path: "scripts/oracle-jdk.sh"
  config.vm.provision :shell, path: "scripts/couchdb.sh"
  config.vm.provision :shell, path: "scripts/node-js.sh"
  config.vm.provision :shell, path: "scripts/rabbitmq.sh"
  config.vm.provision :shell, path: "scripts/fuseki.sh"
end
